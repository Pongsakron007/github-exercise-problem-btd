'''
คำอธิบาย
แรงค์เกอร์ REALZUKE ได้ไปเจอกับดันเจียนเขาวงกตรูปก้นหอยทวนเข็มนาฬิกา ที่มีลักษณะเป็นรูปสี่เหลี่ยมจตุรัส ซึ่งจะมีสมบัติระดับ SSS อยู่ที่ห้องที่ลึกที่สุดใจกลางดันเจียน โดยหน้าดันเจียน มีคำใบ้ที่จะบอกจำนวนห้องทั้งหมดให้ หน้าที่ของคุณคือวาดแผนที่แสดงเลขห้องต่างๆ ตั้งแต่ 001 - N พร้อมทั้งบอกจำนวนครั้งที่ต้องเดินขึ้น , ลง , ซ้าย , ขวา ให้กับ REALZUKE เพราะว่าภายในห้องสุดท้าย ถ้าเดินต่อไปอีก จะเจอกับดัก และทำให้สูญเสียโอกาสในการได้ไอเทมระดับ SSS ไป

รูปเเบบ Input
รับจำนวนเด็ม n 1 ตัว ซึ่งเป็นจำนวนกำลังสองสมบูรณ์

รูปเเบบ Output
แผนที่ขนาด √n x √n แสดงเลขห้องของดันเจียน โดยให้ห้องที่ 001 อยู่ตรงด้านบนซ้าย และ จำนวนครั้งในการเดินขึ้น , ลง , ซ้าย , ขวา

ข้อจำกัด
(9 ≤ n ≤ 961)

ตัวอย่างที่1
Input:
9

Output:
001 008 007 
002 009 006 
003 004 005 
UP : 1
DOWN : 2
LEFT : 1
RIGHT : 1

ตัวอย่างที่2
Input:
81

Output:
001 032 031 030 029 028 027 026 025 
002 033 056 055 054 053 052 051 024 
003 034 057 072 071 070 069 050 023 
004 035 058 073 080 079 068 049 022 
005 036 059 074 081 078 067 048 021 
006 037 060 075 076 077 066 047 020 
007 038 061 062 063 064 065 046 019 
008 039 040 041 042 043 044 045 018 
009 010 011 012 013 014 015 016 017 
UP : 4
DOWN : 5
LEFT : 4
RIGHT : 4

ตัวอย่างที่3
Input:
529

Output:
001 088 087 086 085 084 083 082 081 080 079 078 077 076 075 074 073 072 071 070 069 068 067 
002 089 168 167 166 165 164 163 162 161 160 159 158 157 156 155 154 153 152 151 150 149 066 
003 090 169 240 239 238 237 236 235 234 233 232 231 230 229 228 227 226 225 224 223 148 065 
004 091 170 241 304 303 302 301 300 299 298 297 296 295 294 293 292 291 290 289 222 147 064 
005 092 171 242 305 360 359 358 357 356 355 354 353 352 351 350 349 348 347 288 221 146 063 
006 093 172 243 306 361 408 407 406 405 404 403 402 401 400 399 398 397 346 287 220 145 062 
007 094 173 244 307 362 409 448 447 446 445 444 443 442 441 440 439 396 345 286 219 144 061 
008 095 174 245 308 363 410 449 480 479 478 477 476 475 474 473 438 395 344 285 218 143 060 
009 096 175 246 309 364 411 450 481 504 503 502 501 500 499 472 437 394 343 284 217 142 059 
010 097 176 247 310 365 412 451 482 505 520 519 518 517 498 471 436 393 342 283 216 141 058 
011 098 177 248 311 366 413 452 483 506 521 528 527 516 497 470 435 392 341 282 215 140 057 
012 099 178 249 312 367 414 453 484 507 522 529 526 515 496 469 434 391 340 281 214 139 056 
013 100 179 250 313 368 415 454 485 508 523 524 525 514 495 468 433 390 339 280 213 138 055 
014 101 180 251 314 369 416 455 486 509 510 511 512 513 494 467 432 389 338 279 212 137 054 
015 102 181 252 315 370 417 456 487 488 489 490 491 492 493 466 431 388 337 278 211 136 053 
016 103 182 253 316 371 418 457 458 459 460 461 462 463 464 465 430 387 336 277 210 135 052 
017 104 183 254 317 372 419 420 421 422 423 424 425 426 427 428 429 386 335 276 209 134 051 
018 105 184 255 318 373 374 375 376 377 378 379 380 381 382 383 384 385 334 275 208 133 050 
019 106 185 256 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 274 207 132 049 
020 107 186 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 206 131 048 
021 108 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 130 047 
022 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 046 
023 024 025 026 027 028 029 030 031 032 033 034 035 036 037 038 039 040 041 042 043 044 045 
UP : 11
DOWN : 12
LEFT : 11
RIGHT : 11
'''

import math
def printSpiral(size):

  row, col = 0, 0
  boundary = size - 1
  sizeLeft = size - 1
  flag = 1
  up, down, right, left = 0, 1, 0, 0
  
  move = 'd'
  matrix = [[0 for j in range(size)] for i in range(size)]
 
  for i in range(1, size * size + 1):

      matrix[row][col] = i

      if move == 'r':
          col += 1
      elif move == 'l':
          col -= 1
      elif move == 'u':
          row -= 1
      elif move == 'd':
          row += 1
 
      if i == boundary:
          boundary += sizeLeft

          if flag != 2:
              flag = 2
          else:
              flag = 1
              sizeLeft -= 1
 
          if move == 'r':
              move = 'u'
              up += (1 if i != (size * size)-1 else 0)
          elif move == 'd':
              move = 'r'
              right += (1 if i != (size * size)-1 else 0)
          elif move == 'l':
              move = 'd'
              down += (1 if i != (size * size)-1 else 0)
          elif move == 'u':
              move = 'l'
              left += (1 if i != (size * size)-1 else 0)
 
  for row in range(size):
      for col in range(size):
          n = matrix[row][col]
          if len(str(n)) == 1:
            n = "00" + str(n)
          elif len(str(n)) == 2:
            n = "0" + str(n)
          else:
            n = str(n)
          print(n, end=' ')
      print()

  print(f"UP : {up}")
  print(f"DOWN : {down}")
  print(f"LEFT : {left}")
  print(f"RIGHT : {right}")
    

size = int(math.sqrt(int(input())))
 
printSpiral(size)
